from aiogram import types
from aiogram.dispatcher import Dispatcher
from aiogram.dispatcher.filters import Command
from aiogram.fsm.context import FSMContext
from states import WaterStates
from database import get_user, update_user

async def log_water(message: types.Message, state: FSMContext):
    """–ó–∞–ø—Ä–æ—Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤—ã–ø–∏—Ç–æ–π –≤–æ–¥—ã."""
    await message.answer("–°–∫–æ–ª—å–∫–æ –≤–æ–¥—ã –≤—ã –≤—ã–ø–∏–ª–∏? (–≤ –º–ª)")
    await state.set_state(WaterStates.water_quantity)

async def log_water_quantity(message: types.Message, state: FSMContext):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –≤—ã–ø–∏—Ç–æ–π –≤–æ–¥—ã –≤ –ë–î."""
    user_id = message.from_user.id

    try:
        water = int(message.text)
        if water <= 0:
            raise ValueError
    except ValueError:
        await message.answer("–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–¥—ã (—Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –≤ –º–ª).")
        return

    user_data = await get_user(user_id)

    if not user_data:
        await message.answer("–û—à–∏–±–∫–∞: –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /set_profile –¥–ª—è –µ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è.")
        await state.clear()
        return

    current_water = user_data["logged_water"]
    water_goal = user_data["water_goal"]

    new_total = current_water + water

    # –û–±–Ω–æ–≤–ª—è–µ–º –ë–î
    await update_user(user_id, "logged_water", new_total)

    # –°–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–æ–≥—Ä–µ—Å—Å
    if new_total >= water_goal:
        await message.answer(f"üéâ –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –¥–Ω–µ–≤–Ω–æ–π –Ω–æ—Ä–º—ã –≤–æ–¥—ã! ({new_total}/{water_goal} –º–ª) –û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞! üíß")
    else:
        remaining = water_goal - new_total
        await message.answer(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ {water} –º–ª. –í—Å–µ–≥–æ –≤—ã–ø–∏—Ç–æ: {new_total}/{water_goal} –º–ª.\n"
                             f"–û—Å—Ç–∞–ª–æ—Å—å: {remaining} –º–ª –¥–æ —Ü–µ–ª–∏! üí™")

    await state.clear()

def register_water_handlers(dp: Dispatcher):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥."""
    dp.register_message_handler(log_water, Command("log_water"))
    dp.register_message_handler(log_water_quantity, state=WaterStates.water_quantity)
